@*for search*@
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js"></script>
<link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css" type="text/css">
@*for destination*@
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.js"></script>
<link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.css" type="text/css">

<div id="map"></div>

<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiYW5kcmVlYS1icmFuZHVzYSIsImEiOiJjbGd0dGFwdzIwMjA1M3JrOHF3ZmR2N3NvIn0.tP1VOcDml_MHwvq98KkL6g';
    const map = new mapboxgl.Map({
        container: 'map', // container ID
        style: 'mapbox://styles/mapbox/streets-v12', // style URL
        center: [21.227585019976573, 45.75733446053322], // starting position [lng, lat]
        zoom: 12.5 // starting zoom
    });

    // Add zoom and rotation controls to the map.
    map.addControl(new mapboxgl.NavigationControl());

</script>

@if (User.IsInRole("Administrator"))
{
    <script>
        map.getCanvas().style.cursor = 'default';
    </script>
}

@if (User.IsInRole("Driver"))
{
    <div class="left-container">
        <input type="text" placeholder="enter vehicle name">

        <button id="btn" class="btn btn-outline-success my-2 my-sm-0" type="submit" style="float: right; margin-top: 5px!important;">
            Navigate
        </button>

        <fieldset id="breakdownReason" class="p-3" style="border: 1px solid #ad5049; margin-top: 60vh; margin-bottom: 10vh;">
            <legend class="float-none w-auto px-3" style="text-align: left; font-size: 0.9rem; color: #91403a;">
                Select breakdown reason
            </legend>
            <select name="delayReason" id="select" autocomplete="off" required style="width: 100%; padding: 5px 0 5px 0; color: gray;">
                <option>Traffic</option>
                <option>Flat tire</option>
                <option>Engine breakdown</option>
                <option>Got in an accident</option>
                <option>No fuel</option>
                <option>Other</option>
            </select>
        </fieldset>
    </div>

    <script>
        const btn = document.getElementById('btn');
        // Toggle button text on click
        btn.addEventListener('click', function handleClick() {
          const initialText = 'Navigate';

          if (btn.textContent.toLowerCase().includes(initialText.toLowerCase())) {
            btn.textContent = 'End trip';
          } else {
            btn.textContent = initialText;
          }
        });


        // Add geolocate control to the map
        map.addControl(
            new mapboxgl.GeolocateControl({
                positionOptions: {
                    enableHighAccuracy: true
                },
                // When active the map will receive updates to the device's location as it changes.
                trackUserLocation: true,
                // Draw an arrow next to the location dot to indicate which direction the device is heading.
                showUserHeading: true
            })
        );
    </script>
}

@if (User.IsInRole("User"))
{
    <div class="left-container">
        <input type="text" id="currentLocation" placeholder="enter starting point">
        <input type="text" placeholder="enter destination">
    </div>

    <script>
        // Add geolocate control to the map
        map.addControl(
            new mapboxgl.GeolocateControl({
                positionOptions: {
                    enableHighAccuracy: true
                },

                // When active the map will receive updates to the device's location as it changes.
                trackUserLocation: true,

                // Draw an arrow next to the location dot to indicate which direction the device is heading.
                showUserHeading: true
            })
        );
    </script>
}